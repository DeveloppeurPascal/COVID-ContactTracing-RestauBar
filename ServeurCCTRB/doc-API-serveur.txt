Serveur CCTRB :

-------------------------

Base de données :

voir fichier cctrb.sql

=> historiques (journal des entrées/sorties)
- ID etablissement
- ID client
- Date/Heure arrivée
- Date/Heure sortie
- Cas contact O/N

=> etablissement
- ID etablissement
- raison sociale
- type etablissement
- ClePublique
- ClePrivee

=> type etablissement
- ID type etablissement
- libelle

=> declarations
- ID client
- Date/Heure déclaration COVID+

=> clients
- ID client
- ClePublique
- ClePrivee

Base de données MySQL utilisée par défaut :
- serveur : localhost
- nom de la base : cctrb
- utilisateur : root
- mot de passe : n/a

-------------------------

API du serveur :

Un calcul de checksum est fait lors de certains appels. S'il n'est pas valide le serveur retourne une erreur 500.

- inscription client : lors de la première utilisation de l'application cliente (lancement du logiciel ou première entrée dans un établissement)
http://localhost:8080/cliadd
GET
IN :
	V (calcul checksum avec CleCCTRB)
OUT :
	JSON objets (id, kpub, kpriv)

- entrée dans un établissement : effectuée par un client par lecture du QR code de l'établissement (à son arrivée)
http://localhost:8080/cliinetb
GET
IN :
	IDClient
	IDEtablissement (provenant du QRCode)
	V (calcul checksum avec cleprivee (client) + IDClient + IDEtablissement)
OUT :
	n/a

- sortie d'un établissement : effectuée lors de l'entrée dans l'établissement suivant ou par lecture du QR Code d'un établissement lue en entrée
http://localhost:8080/clioutetb
GET
IN :
	IDClient
	IDEtablissement (provenant du QRCode)
	V (calcul checksum avec cleprivee (client) + IDClient + IDEtablissement)
OUT :
	n/a
code http 301 => pas d'entrée, en faire une avant de resoumettre la sortie.

- déclaration COVID+ : effectuée par un client depuis son application mobile
http://localhost:8080/deccovidplus
GET
IN :
	IDClient
	V (calcul checksum avec cleprivee + IDClient)
OUT :
	n/a

- test cas contact client : effectué par l'application cliente sur demande de l'utilisateur renvoie la liste des tranches horaires flaguées en cas contact
http://localhost:8080/clicascontact
GET
IN :
	IDClient
	V (calcul checksum avec cleprivee + IDClient)
OUT :
	JSON tableau d'objets (StartDate, EndDate)

- liste des types d'établissement : demandée par le logiciel établissement pour l'inscription et la modification d'une fiche d'établissement
http://localhost:8080/types
GET
OUT :
	JSON tableau d'objets (id,label)

- inscription établissement : lors de l'inscription d'un établissement dnas la base de données (lancement de EtabCCTRB)
http://localhost:8080/etbadd
POST
IN :
	l => raison sociale
	t => ID du type établissement
	V (calcul checksum avec CleCCTRB + raison sociale + ID Type Etablissement)
OUT :
	JSON objets (id, kpub, kpriv)

- modification établissement : modification de la fiche d'un établissement
http://localhost:8080/etbchg
POST
IN :
	i => ID établissement
	l => raison sociale
	t => ID du type établissement
	V1 (calcul checksum avec CleCCTRB + IDEtablissement + raison sociale + ID Type Etablissement)
	V2 (calcul checksum avec cleprivee + IDEtablissement + raison sociale + ID Type Etablissement)
OUT :
	n/a
	
- test cas contact établissement : effectué par l'application établissement sur demande de l'utilisateur
http://localhost:8080/etbcascontact
GET
IN :
	i => ID établissement
	V (calcul checksum avec cleprivee + IDEtablissement)
OUT :
	JSON tableau d'objets (StartDate, EndDate)

-------------------------

Fonctionnalités :

- gérer la base de données et l'API
- faire du ménage dans la base de données pour n'archiver que 2 semaines de données (donc J à J-14)
